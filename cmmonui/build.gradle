apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileVersion
    buildToolsVersion rootProject.ext.buildVersion


    defaultConfig {
        minSdkVersion rootProject.ext.minVersion
        targetSdkVersion rootProject.ext.targetVersion
        versionCode rootProject.ext.appVersionCode as Integer
        versionName rootProject.ext.appVersionName as String

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompatVersion}"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.testJunitExt}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espressoVersion}"

    api "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintVersion}"
    api "androidx.recyclerview:recyclerview:${rootProject.ext.recyclerviewVersion}"
    api "com.google.android.material:material:${rootProject.ext.materialVersion}"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.ext.lifecycleVersion"
    implementation "android.arch.lifecycle:viewmodel:$rootProject.ext.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.ext.lifecycleVersion"
    // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.ext.lifecycleVersion"


    //扫码
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.6'
    api 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //二维码
    implementation 'com.github.kenglxn.QRGen:android:2.6.0'
    implementation 'com.google.zxing:core:3.3.3'

    //检查更新
    implementation 'com.allenliu.versionchecklib:library:2.2.0'

    //阴影
    implementation 'com.github.bigmanLau:CardviewFix:1.0.3'

    //圆角图片，过时，请使用Glide加载圆角图片
    implementation 'com.makeramen:roundedimageview:2.2.1'

    //图片展示浏览，提供类相册效果，支持超大图片
    implementation('com.davemorrissey.labs:subsampling-scale-image-view:3.10.0') {
        exclude group: 'com.android.support'
    }

    //与web js交互
    implementation 'com.github.lzyzsd:jsbridge:1.0.4'

    //进度条
    //implementation 'com.kaopiz:kprogresshud:1.2.0'

    //popupwindow
    implementation('com.github.zyyoona7:EasyPopup:1.1.2') {
        exclude group: 'com.android.support'
    }

    //alert
    implementation 'com.tapadoo.android:alerter:4.0.2'

    //图片裁剪
    //implementation project(':cropper')
    api project(':commonutil')
    implementation "androidx.core:core-ktx:+"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
}
repositories {
    mavenCentral()
}
